package Chap3_검색알고리즘;
/*
* 3장 1번 실습과제: 03-3 정수배열이진검색
* 함수(메소드)에 parameter 전달 방식을 표현하는 능력의 숙달 훈련
* 함수(메소드) 전체를 작성하는 훈련 
* 3장 - 1번 실습 과제 > 2번 실습: 스트링 객체의 정렬과 이진 탐색 > 3번 실습: 객체 정렬과 이진 탐색
*/
import java.util.Arrays;
import java.util.List;
import java.util.Random;

public class train_실습3_4정수배열이진탐색 {

	public train_실습3_4정수배열이진탐색() {
		// TODO Auto-generated constructor stub
	}
	static void inputData (int [] data) {
		Random rand = new Random();
		for (int i=0 ; i<data.length ; i++) {
			data[i]=rand.nextInt(101);
		}
	}
	static void showList(String txt, int[] data) {
		System.out.println(Arrays.toString(data));
	}
	
    static boolean linearSearch(int [] data, int key) {
   
    	int idx=0;
    	while(true) {
    		if (idx==data.length) {
    			return false;
    		}
    		if (data[idx]==key) {
    			return true;
    		}
    		idx++;
    	}
    	
    }
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int []data = new int[30];
		inputData(data);// 구현 반복 숙달 훈련 - 100 이하 난수를 생성

		showList("정렬 전 배열[]:: ", data);
		Arrays.sort(data);
		showList("정렬 후 배열[]:: ", data);// 구현 반복 숙달 훈련.
		
		Random rand = new Random();
		int key = rand.nextInt(101);
		boolean resultIndex = linearSearch(data, key);
		System.out.println("\nlinearSearch: key = " + key + ", result = " + resultIndex);
		
		key = rand.nextInt(101);
		/*
		 * 교재 109~113
		 */
		
	}

}
