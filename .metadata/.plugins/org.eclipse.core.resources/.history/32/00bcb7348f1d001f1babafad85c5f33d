package Chap3_검색알고리즘;
/*
* 3장 1번 실습과제: 03-3 정수배열이진검색
* 함수(메소드)에 parameter 전달 방식을 표현하는 능력의 숙달 훈련
* 함수(메소드) 전체를 작성하는 훈련 
* 3장 - 1번 실습 과제 > 2번 실습: 스트링 객체의 정렬과 이진 탐색 > 3번 실습: 객체 정렬과 이진 탐색
*/
import java.util.Arrays;
import java.util.List;
import java.util.Random;

public class train_실습3_4정수배열이진탐색 {

	public train_실습3_4정수배열이진탐색() {
		// TODO Auto-generated constructor stub
	}
	static void inputData (int [] data) {
		Random rand = new Random();
		for (int i=0 ; i<data.length ; i++) {
			data[i]=rand.nextInt(101);
		}
	}
	static void showList(String txt, int[] data) {
		System.out.println(Arrays.toString(data));
	}
	
    static boolean linearSearch(int [] data, int key) {         //선형검색
   
    	int idx=0;
    	while(true) {
    		if (idx==data.length) {
    			return false;
    		}
    		if (data[idx]==key) {
    			return true;
    		}
    		idx++;
    	}
    	
    }
    
    
    static boolean binarySearch(int [] data, int key) {
    	int pl = 0 ; //검색범위의 첫 인덱스
    	int pr = data.length-1 ; //검색범위의 끝 인덱스
    	
    	do {
    	int pc = (pl +pr) /2 ;   //중앙 인덱스
    	if (data[pc]==key) {return true;}
    	else if (data[pc]>key) {pr=pc-1;}
    	else {pl=pc+1;}
    	}while(pl<=pr);
    	
    	return false;
    }
    
    
    
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int []data = new int[30];
		inputData(data);// 구현 반복 숙달 훈련 - 100 이하 난수를 생성

		showList("정렬 전 배열[]:: ", data);
		Arrays.sort(data);
		showList("정렬 후 배열[]:: ", data);// 구현 반복 숙달 훈련.
		
		Random rand = new Random();
		int key = rand.nextInt(101);
		boolean resultIndex = linearSearch(data, key);           
		System.out.println("\nlinearSearch: key = " + key + ", result = " + resultIndex);
		
		 //* 교재 109~113  이진검색
		key = rand.nextInt(101);
		resultIndex = binarySearch(data, key);//함수 구현이 필요
		System.out.println("\nbinarySearch: key = " + key + ", result = " + resultIndex);
		
		
	
		// * 교재 115 Arrays.binarySearch에 의한 검색
		key = rand.nextInt(101);
		int arrays_binarySearch_resultIndex = Arrays.binarySearch(data, key);
		System.out.println("\nArrays.binarySearch: key = "+ + key +", result = " +  arrays_binarySearch_resultIndex);

	}

}
