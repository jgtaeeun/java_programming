package Chap2_기본자료구조;

import java.util.Arrays;
//교재 67 - 실습 2-5
//2번 실습
import java.util.Random;

public class train_ch2_5 {

	public train_ch2_5() {
		// TODO Auto-generated constructor stub
	}
	static int top = 0;
	static final int MAX_LENGTH = 20;
	
	
	static void showData(float [] data) {//실수 배열을 top 갯수만 출력
			data=Arrays.copyOfRange(data,0,top+1);
			System.out.println(Arrays.toString(data));
	}
	
	static void inputData(float [] data, int num) {
		//난수 실수를 입력
		Random rand = new Random();
		
		for (int count=0 ; count<num ; count++) {
			data[count]=rand.nextFloat();
			top=0;
			top+=count;
		}
		
	}
	static float [] reverse(float [] data) {//역순으로 재배치
		data=Arrays.copyOfRange(data,0,top+1);
		for (int i=0 ;  i<(top+1)/2 ; i++) {
			swap(data, i, data.length-i-1);
		}
		//System.out.println(Arrays.toString(data));
		return 	data;
	}
	
    static void swap(float [] data,int first, int second) {//교재 67페이지 - 맞교환
    	float tmp = data[first];
    	data[first]=data[second];
    	data[second]=tmp;
	
    }
//	}
    static void sortData(float [] data) {//올림차순으로 정렬
    	for (int i = 0 ; i<=top ; i++) {
    		for (int j = top ; j>i ; j--) {
    			if (data[j-1]>data[j]) {
    				swap(data, j-1, j);
    			}
    		}
    	}
	}
    static void insertData(float [] data,float realData) {//insert되는 실수 값이 insert될 위치를 찾아 보다 큰 값은 우측으로 이동
    	//data=Arrays.copyOfRange(data,0,top+2);
    	//System.out.println(Arrays.toString(data));
    	System.out.println(realData);
    	
    	//realData가 가장 큰 값이라 배열 마지막에 위치해야하는 경우
    	if (data[top] <= realData) {
    		data[top+1] = realData;
    	}
    	//realData가 배열 중간에 삽입해야 하는 경우
    	else {
    		for (int j = 0; j <= top; j++) {
    			if (realData < data[j]) {
    	    		
        			float temp = data[j];
        			data[j] = realData;
        			realData = temp;
        		}
    		}
    		data[top+1]=realData;
    	}
    	
    	
    

//    
    	//top=top+1;
	}
//	
//	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		float []data = new float[MAX_LENGTH];// 0.0 ~ 1.0 사이의 실수를 저장
		inputData(data, 10);//10개의 난수를 입력
		showData(data);//top 개수 만큼 출력

		reverse(data);//역순으로 재배치 - 교재 67페이지 참조
		float [] reverse_data=reverse(data).clone();
		System.out.println(Arrays.toString(reverse_data));// 교재 84페이지 코드 참조
		

		sortData(data);//교재 205 bubbleSort() 함수 코드를 사용 - 올림차순으로 정렬
		showData(data);
		
		Random rand = new Random();
		float realData =rand.nextFloat();
		System.out.println(realData);
		insertData(data, realData);//역순으로 재배치 - 정렬 아님
		showData(data);
	}

}
